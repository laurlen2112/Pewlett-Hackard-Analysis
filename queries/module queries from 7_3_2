--7.3.2 drop original retirment table and recreate with emp-no

DROP TABLE retirement_info;

--recreate retirement info table
SELECT emp_no, first_name, last_name
INTO retirement_info
FROM employees
WHERE (birth_date BETWEEN '1952-01-01' and '1955-12-31')
AND (hire_date BETWEEN '1985-01-01' AND '1988-12-31');

--check table
SELECT * FROM retirement_info;
SELECT COUNT(first_name)
FROM retirement_info

--joining department and dept_managers table with inner join
SELECT departments.dept_name,
	dept_manager.emp_no,
	dept_manager.from_date,
	dept_manager.to_date
FROM departments
INNER JOIN dept_manager
ON departments.dept_no = dept_manager.dept_no;

--check table
SELECT * FROM departments;
SELECT COUNT(emp_no)
FROM departments
--practice the same join as above, using aliases
SELECT d.dept_name,
	dm.emp_no,
	dm.from_date,
	dm.to_date
FROM departments as d
INNER JOIN dept_manager as dm
ON d.dept_no = dm.dept_no;

--using a left join to add start and end dates to retire table
SELECT retirement_info.emp_no,
	retirement_info.first_name,
retirement_info.last_name,
	dept_emp.to_date
--assign left join with FROM
FROM retirement_info
LEFT JOIN dept_emp
--use on to tell it where they are lined
ON retirement_info.emp_no = dept_emp.emp_no;

--practice using aliases (ri = retirement info, de = dept emp)
--same join as above but using alisases
--aliases are not saved and only exist with the block of code we use 
--use them in
SELECT ri.emp_no,
	ri.first_name,
ri.last_name,
	de.to_date
--define the aliases
FROM retirement_info as ri
LEFT join dept_emp as de
ON ri.emp_no = de.emp_no;

--use a left join on retirement table and dept_emp table to see 
--if they are still with PH
SELECT ri.emp_no,
	ri.first_name,
	ri.last_name,
de.to_date
--create a new table to hold info
INTO current_emp
--step to join
FROM retirement_info as ri
LEFT JOIN dept_emp as de
ON ri.emp_no = de.emp_no
--filtering the table
WHERE de.to_date = ('9999-01-01')

--7.3.4 Use count, group by and order by

--employee count by dept number
SELECT COUNT(ce.emp_no), de.dept_no
FROM current_emp as ce
LEFT JOIN dept_emp as de
ON ce.emp_no = de.emp_no
GROUP BY de.dept_no;

-- employee count by dept number using group by, count, and join
SELECT COUNT(ce.emp_no), de.dept_no
FROM current_emp as ce
LEFT JOIN dept_emp as de
ON ce.emp_no = de.emp_no
GROUP BY de.dept_no;

--using order by to make the output  be organized by dept no
--in ascending order
SELECT COUNT(ce.emp_no), de.dept_no
--skill drill update code to include output table
INTO retire_by_dept_no
FROM current_emp as ce
LEFT JOIN dept_emp as de
ON ce.emp_no = de.emp_no
GROUP BY de.dept_no
ORDER BY de.dept_no;

--7.3.5 creating more lists
--employee info joining employees and salaries
--check data in salaries table
SELECT * FROM salaries
ORDER BY to_date DESC;

--join salaries and emp_dept to fix salaries date with 3 joins
--step 1 filter employees into temp table
SELECT e.emp_no, 
	e.first_name, 
e.last_name, 
	e.gender,
	s.salary,
	s.to_date
--create place to save; comment out into statement to see results
--so if mistake was made can change before new table was saved
--INTO emp_info
FROM employees as e
INNER JOIN salaries as s
ON (e.emp_no = s.emp_no)
--add 3rd join
INNER JOIN dept_emp as de
ON (e.emp_no = de.emp_no)
--add filters
WHERE(birth_date BETWEEN '1952-01-01' AND '1955-12-31')
	AND (hire_date BETWEEN '1985-01-01' AND '1988-12-31')
	AND (de.to_date = '9999-01-01');


--joining 3 more tables with the into commented out to test the join

SELECT ce.emp_no, 
ce.first_name, 
ce.last_name, 
d.dept_name
--INTO dept_info
FROM current_emp as ce
INNER join dept_emp AS de
ON (ce.emp_no = de.emp_no)
INNER JOIN departments AS d
ON(de.dept_no = d.dept_no);

--7.3.6 create taileroed lists
--skill drill create list that will return everying on the retirement in
--tailored to the sales dept; emp_no, emp_1st name, emp_last_name, emp_dpt name
--sales = d007






















